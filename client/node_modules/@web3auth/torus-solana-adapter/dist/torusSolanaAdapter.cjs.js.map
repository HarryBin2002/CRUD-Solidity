{"version":3,"file":"torusSolanaAdapter.cjs.js","mappings":"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","sources":["webpack://@web3auth/torus-solana-adapter/webpack/bootstrap","webpack://@web3auth/torus-solana-adapter/webpack/runtime/compat get default export","webpack://@web3auth/torus-solana-adapter/webpack/runtime/define property getters","webpack://@web3auth/torus-solana-adapter/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/torus-solana-adapter/webpack/runtime/make namespace object","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@babel/runtime/helpers/asyncToGenerator\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@babel/runtime/helpers/classCallCheck\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@babel/runtime/helpers/createClass\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@babel/runtime/helpers/assertThisInitialized\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@babel/runtime/helpers/get\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@babel/runtime/helpers/inherits\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@babel/runtime/helpers/getPrototypeOf\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@babel/runtime/regenerator\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@toruslabs/solana-embed\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@web3auth/base-solana-adapter\"","webpack://@web3auth/torus-solana-adapter/external commonjs2 \"@web3auth/solana-provider\"","webpack://@web3auth/torus-solana-adapter/./src/solanaWalletAdapter.ts","webpack://@web3auth/torus-solana-adapter/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classCallCheck\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/createClass\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/assertThisInitialized\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/get\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/inherits\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/getPrototypeOf\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/regenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/solana-embed\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base-solana-adapter\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/solana-provider\");","import Torus, { NetworkInterface, TorusCtorArgs, TorusLoginParams, TorusParams } from \"@toruslabs/solana-embed\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseSolanaAdapter } from \"@web3auth/base-solana-adapter\";\nimport { ITorusWalletProvider, TorusInjectedProvider } from \"@web3auth/solana-provider\";\n\nexport interface SolanaWalletOptions {\n  adapterSettings?: TorusCtorArgs;\n  loginSettings?: TorusLoginParams;\n  initParams?: Omit<TorusParams, \"network\">;\n  chainConfig?: CustomChainConfig;\n  sessionTime?: number;\n  clientId?: string;\n}\n\nexport class SolanaWalletAdapter extends BaseSolanaAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.TORUS_SOLANA;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.SOLANA;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.SOLANA;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public torusInstance: Torus | null = null;\n\n  private torusWalletOptions?: TorusCtorArgs;\n\n  private initParams?: TorusParams;\n\n  private loginSettings?: TorusLoginParams = {};\n\n  private solanaProvider: TorusInjectedProvider | null = null;\n\n  private rehydrated = false;\n\n  constructor(params: SolanaWalletOptions) {\n    super(params);\n    this.torusWalletOptions = params.adapterSettings || {};\n    this.initParams = params.initParams || {};\n    this.loginSettings = params.loginSettings || {};\n    this.chainConfig = params.chainConfig || null;\n    this.sessionTime = params.sessionTime || 86400;\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.solanaProvider) {\n      return this.solanaProvider?.provider || null;\n    }\n    return null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    super.checkInitializationRequirements();\n    // set chainConfig for mainnet by default if not set\n    let network: NetworkInterface;\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, \"0x1\");\n      const { blockExplorer, displayName, ticker, tickerName, rpcTarget, chainId } = this.chainConfig as CustomChainConfig;\n      network = { chainId, rpcTarget, blockExplorerUrl: blockExplorer, displayName, ticker, tickerName, logo: \"\" };\n    } else {\n      const { chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n      network = { chainId, rpcTarget, blockExplorerUrl: blockExplorer, displayName, tickerName, ticker, logo: \"\" };\n    }\n    this.torusInstance = new Torus(this.torusWalletOptions);\n    log.debug(\"initializing torus solana adapter init\");\n    await this.torusInstance.init({ showTorusButton: false, ...this.initParams, network });\n\n    this.solanaProvider = new TorusInjectedProvider({\n      config: {\n        chainConfig: this.chainConfig as CustomChainConfig,\n      },\n    });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_SOLANA);\n\n    try {\n      log.debug(\"initializing torus solana adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached torus solana provider\", error);\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    if (!this.solanaProvider) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.TORUS_SOLANA });\n    try {\n      await this.torusInstance.login(this.loginSettings);\n      try {\n        const torusInpageProvider = this.torusInstance.provider as unknown as ITorusWalletProvider;\n        torusInpageProvider.sendTransaction = this.torusInstance.sendTransaction.bind(this.torusInstance);\n        torusInpageProvider.signAllTransactions = this.torusInstance.signAllTransactions.bind(this.torusInstance);\n        torusInpageProvider.signMessage = this.torusInstance.signMessage.bind(this.torusInstance);\n        torusInpageProvider.signTransaction = this.torusInstance.signTransaction.bind(this.torusInstance);\n        await this.solanaProvider.setupProvider(torusInpageProvider);\n      } catch (error: unknown) {\n        // some issue in solana wallet, always connecting to mainnet on init.\n        // fallback to change network if not connected to correct one on login.\n        if (error instanceof Web3AuthError && error.code === 5010) {\n          const { chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n          const network = { chainId, rpcTarget, blockExplorerUrl: blockExplorer, displayName, tickerName, ticker, logo: \"\" };\n          await this.torusInstance.setProvider(network);\n        } else {\n          throw error;\n        }\n      }\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.torusInstance.showTorusButton();\n      this.emit(ADAPTER_STATUS.CONNECTED, { adapter: WALLET_ADAPTERS.TORUS_SOLANA, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw WalletLoginError.connectionError(\"Failed to login with torus solana wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    await super.disconnect();\n    await this.torusInstance.logout();\n    if (options.cleanup) {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.torusInstance = null;\n      this.solanaProvider = null;\n    } else {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.READY;\n    }\n\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    const userInfo = await this.torusInstance.getUserInfo();\n    return userInfo;\n  }\n\n  setAdapterSettings(options: { sessionTime?: number; clientId?: string }): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options?.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n    if (options?.clientId) {\n      this.clientId = options.clientId;\n    }\n  }\n}\n","export * from \"./solanaWalletAdapter\";\n"],"names":["Torus","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_NAMESPACES","ADAPTER_STATUS","CHAIN_NAMESPACES","getChainConfig","log","WALLET_ADAPTERS","WalletInitializationError","WalletLoginError","Web3AuthError","BaseSolanaAdapter","TorusInjectedProvider","SolanaWalletAdapter","params","TORUS_SOLANA","SOLANA","EXTERNAL","NOT_READY","torusWalletOptions","adapterSettings","initParams","loginSettings","chainConfig","sessionTime","status","CONNECTED","solanaProvider","provider","_","Error","options","blockExplorer","displayName","ticker","tickerName","rpcTarget","chainId","network","blockExplorerUrl","logo","torusInstance","debug","init","showTorusButton","config","READY","emit","autoConnect","rehydrated","connect","error","ERRORED","notReady","CONNECTING","adapter","login","torusInpageProvider","sendTransaction","bind","signAllTransactions","signMessage","signTransaction","setupProvider","code","setProvider","reconnected","connectionError","cleanup","logout","DISCONNECTED","notConnectedError","getUserInfo","userInfo","clientId"],"sourceRoot":""}