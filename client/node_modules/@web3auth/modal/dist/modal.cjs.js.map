{"version":3,"file":"modal.cjs.js","mappings":"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","sources":["webpack://@web3auth/modal/./src/config.ts","webpack://@web3auth/modal/external commonjs2 \"@babel/runtime/helpers/toConsumableArray\"","webpack://@web3auth/modal/external commonjs2 \"@babel/runtime/helpers/asyncToGenerator\"","webpack://@web3auth/modal/external commonjs2 \"@babel/runtime/helpers/classCallCheck\"","webpack://@web3auth/modal/external commonjs2 \"@babel/runtime/helpers/createClass\"","webpack://@web3auth/modal/external commonjs2 \"@babel/runtime/helpers/assertThisInitialized\"","webpack://@web3auth/modal/external commonjs2 \"@babel/runtime/helpers/get\"","webpack://@web3auth/modal/external commonjs2 \"@babel/runtime/helpers/inherits\"","webpack://@web3auth/modal/external commonjs2 \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://@web3auth/modal/external commonjs2 \"@babel/runtime/helpers/getPrototypeOf\"","webpack://@web3auth/modal/external commonjs2 \"@babel/runtime/regenerator\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/core\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/ui\"","webpack://@web3auth/modal/./src/default.ts","webpack://@web3auth/modal/./src/utils.ts","webpack://@web3auth/modal/./src/modalManager.ts","webpack://@web3auth/modal/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/metamask-adapter\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/openlogin-adapter\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/phantom-adapter\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/torus-evm-adapter\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/torus-solana-adapter\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/wallet-connect-v1-adapter\"","webpack://@web3auth/modal/webpack/bootstrap","webpack://@web3auth/modal/webpack/runtime/compat get default export","webpack://@web3auth/modal/webpack/runtime/create fake namespace object","webpack://@web3auth/modal/webpack/runtime/define property getters","webpack://@web3auth/modal/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/modal/webpack/runtime/make namespace object","webpack://@web3auth/modal/./src/index.ts"],"sourcesContent":["import { CHAIN_NAMESPACES, EVM_ADAPTERS, SOLANA_ADAPTERS } from \"@web3auth/base\";\n\nimport { AdaptersModalConfig } from \"./interface\";\n\nexport const defaultSolanaDappModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: {\n    [SOLANA_ADAPTERS.TORUS_SOLANA]: {\n      label: \"Torus Wallet\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [SOLANA_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [SOLANA_ADAPTERS.PHANTOM]: {\n      label: \"Phantom\",\n      showOnModal: true,\n      showOnMobile: false,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultEvmDappModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: {\n    [EVM_ADAPTERS.TORUS_EVM]: {\n      label: \"Torus Wallet\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [EVM_ADAPTERS.METAMASK]: {\n      label: \"MetaMask\",\n      showOnModal: true,\n      showOnMobile: false,\n      showOnDesktop: true,\n    },\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [EVM_ADAPTERS.WALLET_CONNECT_V1]: {\n      label: \"Wallet Connect\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultSolanaWalletModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: {\n    [SOLANA_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultEvmWalletModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: {\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultOtherModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.OTHER,\n  adapters: {\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/toConsumableArray\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classCallCheck\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/createClass\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/assertThisInitialized\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/get\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/inherits\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/getPrototypeOf\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/regenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/core\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/ui\");","import type { OpenLoginOptions } from \"@toruslabs/openlogin\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, IAdapter, WALLET_ADAPTER_TYPE, WALLET_ADAPTERS } from \"@web3auth/base\";\n\nexport const getDefaultAdapterModule = async (params: {\n  name: WALLET_ADAPTER_TYPE;\n  clientId: string;\n  customChainConfig: Partial<CustomChainConfig> & Pick<CustomChainConfig, \"chainNamespace\">;\n}): Promise<IAdapter<unknown>> => {\n  const { name, customChainConfig, clientId } = params;\n  if (!Object.values(CHAIN_NAMESPACES).includes(customChainConfig.chainNamespace))\n    throw new Error(`Invalid chainNamespace: ${customChainConfig.chainNamespace}`);\n  const finalChainConfig = {\n    ...(getChainConfig(customChainConfig.chainNamespace, customChainConfig?.chainId) as CustomChainConfig),\n    ...(customChainConfig || {}),\n  };\n  if (name === WALLET_ADAPTERS.TORUS_EVM) {\n    const { TorusWalletAdapter } = await import(\"@web3auth/torus-evm-adapter\");\n    const adapter = new TorusWalletAdapter({ chainConfig: finalChainConfig, clientId });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.TORUS_SOLANA) {\n    const { SolanaWalletAdapter } = await import(\"@web3auth/torus-solana-adapter\");\n    const adapter = new SolanaWalletAdapter({ chainConfig: finalChainConfig, clientId });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.METAMASK) {\n    const { MetamaskAdapter } = await import(\"@web3auth/metamask-adapter\");\n    const adapter = new MetamaskAdapter({ chainConfig: finalChainConfig, clientId });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.PHANTOM) {\n    const { PhantomAdapter } = await import(\"@web3auth/phantom-adapter\");\n    const adapter = new PhantomAdapter({ chainConfig: finalChainConfig, clientId });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.WALLET_CONNECT_V1) {\n    const { WalletConnectV1Adapter } = await import(\"@web3auth/wallet-connect-v1-adapter\");\n    const adapter = new WalletConnectV1Adapter({ chainConfig: finalChainConfig, clientId });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.OPENLOGIN) {\n    const { OpenloginAdapter, getOpenloginDefaultOptions } = await import(\"@web3auth/openlogin-adapter\");\n    const defaultOptions = getOpenloginDefaultOptions(customChainConfig.chainNamespace, customChainConfig?.chainId);\n    const adapter = new OpenloginAdapter({\n      ...defaultOptions,\n      chainConfig: { ...(defaultOptions.chainConfig || {}), ...finalChainConfig },\n      adapterSettings: { ...(defaultOptions.adapterSettings as OpenLoginOptions), clientId },\n    });\n    return adapter;\n  }\n  throw new Error(\"Invalid wallet adapter name\");\n};\n","interface NavigatorLanguage {\n  userLanguage?: string;\n}\n\nexport const languageMap = {\n  en: \"english\",\n  de: \"german\",\n  ja: \"japanese\",\n  ko: \"korean\",\n  zh: \"mandarin\",\n  es: \"spanish\",\n};\n\nexport const getUserLanguage = (defaultLanguage: string | undefined) => {\n  let userLanguage = defaultLanguage;\n  if (!userLanguage) {\n    const browserLanguage =\n      typeof window !== \"undefined\" ? (window.navigator as NavigatorLanguage).userLanguage || window.navigator.language || \"en-US\" : \"en-US\";\n    userLanguage = browserLanguage.split(\"-\")[0];\n  }\n  return Object.prototype.hasOwnProperty.call(languageMap, userLanguage) ? userLanguage : \"en\";\n};\n","import {\n  ADAPTER_CATEGORY,\n  ADAPTER_EVENTS,\n  ADAPTER_STATUS,\n  BaseAdapterConfig,\n  CHAIN_NAMESPACES,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  WALLET_ADAPTER_TYPE,\n  WALLET_ADAPTERS,\n} from \"@web3auth/base\";\nimport { Web3AuthCore, Web3AuthCoreOptions } from \"@web3auth/core\";\nimport { getAdapterSocialLogins, LOGIN_MODAL_EVENTS, LoginModal, OPENLOGIN_PROVIDERS } from \"@web3auth/ui\";\n\nimport {\n  defaultEvmDappModalConfig,\n  defaultEvmWalletModalConfig,\n  defaultOtherModalConfig,\n  defaultSolanaDappModalConfig,\n  defaultSolanaWalletModalConfig,\n} from \"./config\";\nimport { getDefaultAdapterModule } from \"./default\";\nimport { AdaptersModalConfig, ModalConfig } from \"./interface\";\nimport { getUserLanguage } from \"./utils\";\n\nexport interface UIConfig {\n  /**\n   * Logo for your app.\n   */\n  appLogo?: string;\n\n  /**\n   * theme for the modal\n   *\n   * @defaultValue `light`\n   */\n  theme?: \"light\" | \"dark\";\n\n  /**\n   * order of how login methods are shown\n   *\n   * @defaultValue `[\"google\", \"facebook\", \"twitter\", \"reddit\", \"discord\", \"twitch\", \"apple\", \"line\", \"github\", \"kakao\", \"linkedin\", \"weibo\", \"wechat\", \"email_passwordless\"]`\n   */\n  loginMethodsOrder?: string[];\n\n  /**\n   * language which will be used by web3auth. app will use browser language if not specified. if language is not supported it will use \"en\"\n   * en: english\n   * de: german\n   * ja: japanese\n   * ko: korean\n   * zh: mandarin\n   * es: spanish\n   *\n   */\n  defaultLanguage?: string;\n}\nexport interface Web3AuthOptions extends Web3AuthCoreOptions {\n  /**\n   * web3auth instance provides different adapters for different type of usages. If you are dapp and want to\n   * use external wallets like metamask, then you can use the `DAPP` authMode.\n   * If you are a wallet and only want to use you own wallet implementations along with openlogin,\n   * then you should use `WALLET` authMode.\n   *\n   * @defaultValue `DAPP`\n   */\n  authMode?: \"DAPP\" | \"WALLET\";\n  /**\n   * Config for configuring modal ui display properties\n   */\n  uiConfig?: UIConfig;\n\n  /**\n   * Whether to show errors on Web3Auth modal.\n   *\n   * @defaultValue `true`\n   */\n  displayErrorsOnModal?: boolean;\n}\nexport class Web3Auth extends Web3AuthCore {\n  public loginModal: LoginModal;\n\n  readonly options: Web3AuthOptions;\n\n  private modalConfig: AdaptersModalConfig = defaultEvmDappModalConfig;\n\n  constructor(options: Web3AuthOptions) {\n    super(options);\n    this.options = { ...options };\n    const providedChainConfig = this.options.chainConfig;\n    if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n      if (options.authMode === \"WALLET\") {\n        // default config for solana wallet modal\n        this.modalConfig = defaultSolanaWalletModalConfig;\n      } else {\n        // default config for solana dapp modal\n        this.modalConfig = defaultSolanaDappModalConfig;\n      }\n    } else if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.EIP155) {\n      if (options.authMode === \"WALLET\") {\n        // default config for evm wallet modal\n        this.modalConfig = defaultEvmWalletModalConfig;\n      } else {\n        // default config for evm dapp modal\n        this.modalConfig = defaultEvmDappModalConfig;\n      }\n    } else if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.OTHER) {\n      this.modalConfig = defaultOtherModalConfig;\n    } else {\n      throw new Error(`Invalid chainNamespace provided: ${providedChainConfig.chainNamespace}`);\n    }\n\n    // get userLanguage\n    const defaultLanguage = getUserLanguage(this.options.uiConfig?.defaultLanguage);\n\n    this.loginModal = new LoginModal({\n      theme: this.options.uiConfig?.theme,\n      appLogo: this.options.uiConfig?.appLogo || \"\",\n      version: \"\",\n      adapterListener: this,\n      displayErrorsOnModal: this.options.displayErrorsOnModal,\n      defaultLanguage,\n    });\n    this.subscribeToLoginModalEvents();\n  }\n\n  public async initModal(params?: { modalConfig?: Record<WALLET_ADAPTER_TYPE, ModalConfig> }): Promise<void> {\n    super.checkInitRequirements();\n    await this.loginModal.initModal();\n    const providedChainConfig = this.options.chainConfig;\n\n    // merge default adapters with the custom configured adapters.\n    const allAdapters = [...new Set([...Object.keys(this.modalConfig.adapters || {}), ...Object.keys(this.walletAdapters)])];\n\n    const adapterConfigurationPromises = allAdapters.map(async (adapterName) => {\n      // start with the default config of adapter.\n      let adapterConfig = this.modalConfig.adapters?.[adapterName] || {\n        label: adapterName,\n        showOnModal: true,\n        showOnMobile: true,\n        showOnDesktop: true,\n      };\n\n      // override the default config of adapter if some config is being provided by the user.\n      if (params?.modalConfig?.[adapterName]) {\n        adapterConfig = { ...adapterConfig, ...params.modalConfig[adapterName] };\n      }\n      (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapterName] = adapterConfig as ModalConfig;\n\n      // check if adapter is configured/added by user and exist in walletAdapters map.\n      const adapter = this.walletAdapters[adapterName];\n      log.debug(\"adapter config\", adapterName, this.modalConfig.adapters?.[adapterName].showOnModal, adapter);\n\n      // if adapter is not custom configured then check if it is available in default adapters.\n      // and if adapter is not hidden by user\n      if (!adapter && this.modalConfig.adapters?.[adapterName].showOnModal) {\n        // if adapter is not configured and some default configuration is available, use it.\n        const ad = await getDefaultAdapterModule({\n          name: adapterName,\n          customChainConfig: this.options.chainConfig,\n          clientId: this.options.clientId,\n        });\n\n        this.walletAdapters[adapterName] = ad;\n\n        return adapterName;\n      } else if (adapter?.type === ADAPTER_CATEGORY.IN_APP || adapter?.type === ADAPTER_CATEGORY.EXTERNAL || adapterName === this.cachedAdapter) {\n        if (!this.modalConfig.adapters?.[adapterName].showOnModal) return;\n        // add client id to adapter, same web3auth client id can be used in adapter.\n        // this id is being overridden if user is also passing client id in adapter's constructor.\n        this.walletAdapters[adapterName].setAdapterSettings({ clientId: this.options.clientId, sessionTime: this.options.sessionTime });\n\n        // if adapter doesn't have any chainConfig then we will set the chainConfig based of passed chainNamespace\n        // and chainNamespace.\n        if (!adapter.chainConfigProxy) {\n          const chainConfig = {\n            ...getChainConfig(providedChainConfig.chainNamespace, this.coreOptions.chainConfig?.chainId),\n            ...this.coreOptions.chainConfig,\n          } as CustomChainConfig;\n          this.walletAdapters[adapterName].setChainConfig(chainConfig);\n        }\n\n        return adapterName;\n      }\n    });\n\n    const adapterNames = await Promise.all(adapterConfigurationPromises);\n    const hasInAppWallets = Object.values(this.walletAdapters).some((adapter) => {\n      if (adapter.type !== ADAPTER_CATEGORY.IN_APP) return false;\n      if (this.modalConfig.adapters[adapter.name].showOnModal !== true) return false;\n      if (!this.modalConfig.adapters[adapter.name].loginMethods) return true;\n      const mergedLoginMethods = getAdapterSocialLogins(\n        adapter.name,\n        this.walletAdapters[adapter.name],\n        (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapter.name]?.loginMethods\n      );\n      if (Object.values(mergedLoginMethods).some((method) => method.showOnModal)) return true;\n      return false;\n    });\n    log.debug(hasInAppWallets, this.walletAdapters, \"hasInAppWallets\");\n    // Now, initialize the adapters.\n    const initPromises = adapterNames.map(async (adapterName) => {\n      if (!adapterName) return;\n      try {\n        const adapter = this.walletAdapters[adapterName];\n        // only initialize a external adapter here if it is a cached adapter.\n        if (this.cachedAdapter !== adapterName && adapter.type === ADAPTER_CATEGORY.EXTERNAL) {\n          return;\n        }\n        // in-app wallets or cached wallet (being connected or already connected) are initialized first.\n        // if adapter is configured thn only initialize in app or cached adapter.\n        // external wallets are initialized on INIT_EXTERNAL_WALLET event.\n        this.subscribeToAdapterEvents(adapter);\n        if (adapter.status === ADAPTER_STATUS.NOT_READY) await adapter.init({ autoConnect: this.cachedAdapter === adapterName });\n        // note: not adding cachedWallet to modal if it is external wallet.\n        // adding it later if no in-app wallets are available.\n        if (adapter.type === ADAPTER_CATEGORY.IN_APP) {\n          this.initializeInAppWallet(adapterName);\n        }\n      } catch (error) {\n        log.error(error, \"error while initializing adapter\");\n      }\n    });\n\n    this.status = ADAPTER_STATUS.READY;\n    await Promise.all(initPromises);\n\n    const hasExternalWallets = allAdapters.some((adapterName) => {\n      return this.walletAdapters[adapterName]?.type === ADAPTER_CATEGORY.EXTERNAL && this.modalConfig.adapters?.[adapterName].showOnModal;\n    });\n\n    if (hasExternalWallets) {\n      this.loginModal.initExternalWalletContainer();\n    }\n\n    // variable to check if we have any in app wallets\n    // currently all default in app and external wallets can be hidden or shown based on config.\n    if (!hasInAppWallets && hasExternalWallets) {\n      // if no in app wallet is available then initialize external wallets in modal\n      await this.initExternalWalletAdapters(false, { showExternalWalletsOnly: true });\n    }\n  }\n\n  public async connect(): Promise<SafeEventEmitterProvider | null> {\n    // if (!this.loginModal.initialized) throw new Error(\"Login modal is not initialized\");\n    // if already connected return provider\n    if (this.provider) return this.provider;\n    this.loginModal.open();\n    return new Promise((resolve, reject) => {\n      this.once(ADAPTER_EVENTS.CONNECTED, () => {\n        return resolve(this.provider);\n      });\n      this.once(ADAPTER_EVENTS.ERRORED, (err: unknown) => {\n        return reject(err);\n      });\n    });\n  }\n\n  private async initExternalWalletAdapters(externalWalletsInitialized: boolean, options?: { showExternalWalletsOnly: boolean }): Promise<void> {\n    if (externalWalletsInitialized) return;\n    const adaptersConfig: Record<string, BaseAdapterConfig> = {};\n    Object.keys(this.walletAdapters).forEach(async (adapterName) => {\n      const adapter = this.walletAdapters[adapterName];\n      if (adapter?.type === ADAPTER_CATEGORY.EXTERNAL) {\n        log.debug(\"init external wallet\", this.cachedAdapter, adapterName);\n        this.subscribeToAdapterEvents(adapter);\n        // we are not initializing cached adapter here as it is already being initialized in initModal before.\n        if (this.cachedAdapter === adapterName) {\n          return;\n        }\n        if (adapter.status === ADAPTER_STATUS.NOT_READY)\n          await adapter\n            .init({ autoConnect: this.cachedAdapter === adapterName })\n            .then(() => {\n              adaptersConfig[adapterName] = (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapterName];\n              this.loginModal.addWalletLogins(adaptersConfig, { showExternalWalletsOnly: !!options?.showExternalWalletsOnly });\n              return undefined;\n            })\n            .catch((error) => log.error(error, \"error while initializing adapter\"));\n      }\n    });\n  }\n\n  private initializeInAppWallet(adapterName: string): void {\n    log.info(\"adapterInitResults\", adapterName);\n    if (this.walletAdapters[adapterName].type === ADAPTER_CATEGORY.IN_APP) {\n      this.loginModal.addSocialLogins(\n        adapterName,\n        getAdapterSocialLogins(\n          adapterName,\n          this.walletAdapters[adapterName],\n          (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapterName]?.loginMethods\n        ),\n        this.options.uiConfig?.loginMethodsOrder || OPENLOGIN_PROVIDERS\n      );\n    }\n  }\n\n  private subscribeToLoginModalEvents(): void {\n    this.loginModal.on(LOGIN_MODAL_EVENTS.LOGIN, async (params: { adapter: WALLET_ADAPTER_TYPE; loginParams: unknown }) => {\n      try {\n        await this.connectTo<unknown>(params.adapter, params.loginParams);\n      } catch (error) {\n        log.error(`Error while connecting to adapter: ${params.adapter}`, error);\n      }\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.INIT_EXTERNAL_WALLETS, async (params: { externalWalletsInitialized: boolean }) => {\n      await this.initExternalWalletAdapters(params.externalWalletsInitialized);\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.DISCONNECT, async () => {\n      try {\n        await this.logout();\n      } catch (error) {\n        log.error(`Error while disconnecting`, error);\n      }\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, async (visibility: boolean) => {\n      log.debug(\"is login modal visible\", visibility);\n      this.emit(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, visibility);\n      const walletConnectStatus = this.walletAdapters[WALLET_ADAPTERS.WALLET_CONNECT_V1]?.status;\n      if (visibility && walletConnectStatus === ADAPTER_STATUS.READY) {\n        // refreshing session for wallet connect whenever modal is opened.\n        try {\n          this.walletAdapters[WALLET_ADAPTERS.WALLET_CONNECT_V1].connect();\n        } catch (error) {\n          log.error(`Error while disconnecting to wallet connect in core`, error);\n        }\n      }\n    });\n  }\n}\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@web3auth/base\");","module.exports = require(\"@web3auth/metamask-adapter\");","module.exports = require(\"@web3auth/openlogin-adapter\");","module.exports = require(\"@web3auth/phantom-adapter\");","module.exports = require(\"@web3auth/torus-evm-adapter\");","module.exports = require(\"@web3auth/torus-solana-adapter\");","module.exports = require(\"@web3auth/wallet-connect-v1-adapter\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from \"./config\";\nexport * from \"./interface\";\nexport * from \"./modalManager\";\n"],"names":["CHAIN_NAMESPACES","EVM_ADAPTERS","SOLANA_ADAPTERS","defaultSolanaDappModalConfig","chainNamespace","SOLANA","adapters","TORUS_SOLANA","label","showOnModal","showOnMobile","showOnDesktop","OPENLOGIN","PHANTOM","defaultEvmDappModalConfig","EIP155","TORUS_EVM","METAMASK","WALLET_CONNECT_V1","defaultSolanaWalletModalConfig","defaultEvmWalletModalConfig","defaultOtherModalConfig","OTHER","getChainConfig","WALLET_ADAPTERS","getDefaultAdapterModule","params","name","customChainConfig","clientId","Object","values","includes","Error","finalChainConfig","chainId","TorusWalletAdapter","adapter","chainConfig","SolanaWalletAdapter","MetamaskAdapter","PhantomAdapter","WalletConnectV1Adapter","OpenloginAdapter","getOpenloginDefaultOptions","defaultOptions","adapterSettings","languageMap","en","de","ja","ko","zh","es","getUserLanguage","defaultLanguage","userLanguage","browserLanguage","window","navigator","language","split","prototype","hasOwnProperty","call","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_STATUS","log","Web3AuthCore","getAdapterSocialLogins","LOGIN_MODAL_EVENTS","LoginModal","OPENLOGIN_PROVIDERS","Web3Auth","options","providedChainConfig","authMode","modalConfig","uiConfig","loginModal","theme","appLogo","version","adapterListener","displayErrorsOnModal","subscribeToLoginModalEvents","initModal","allAdapters","Set","keys","walletAdapters","adapterConfigurationPromises","map","adapterName","adapterConfig","debug","ad","type","IN_APP","EXTERNAL","cachedAdapter","setAdapterSettings","sessionTime","chainConfigProxy","coreOptions","setChainConfig","Promise","all","adapterNames","hasInAppWallets","some","loginMethods","mergedLoginMethods","method","initPromises","subscribeToAdapterEvents","status","NOT_READY","init","autoConnect","initializeInAppWallet","error","READY","hasExternalWallets","initExternalWalletContainer","initExternalWalletAdapters","showExternalWalletsOnly","provider","open","resolve","reject","once","CONNECTED","ERRORED","err","externalWalletsInitialized","adaptersConfig","forEach","then","addWalletLogins","undefined","catch","info","addSocialLogins","loginMethodsOrder","on","LOGIN","connectTo","loginParams","INIT_EXTERNAL_WALLETS","DISCONNECT","logout","MODAL_VISIBILITY","visibility","emit","walletConnectStatus","connect"],"sourceRoot":""}