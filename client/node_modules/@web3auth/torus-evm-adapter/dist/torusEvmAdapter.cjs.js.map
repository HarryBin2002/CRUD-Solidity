{"version":3,"file":"torusEvmAdapter.cjs.js","mappings":"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","sources":["webpack://@web3auth/torus-evm-adapter/webpack/bootstrap","webpack://@web3auth/torus-evm-adapter/webpack/runtime/compat get default export","webpack://@web3auth/torus-evm-adapter/webpack/runtime/define property getters","webpack://@web3auth/torus-evm-adapter/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/torus-evm-adapter/webpack/runtime/make namespace object","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/asyncToGenerator\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/classCallCheck\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/createClass\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/assertThisInitialized\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/get\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/inherits\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/getPrototypeOf\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/regenerator\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@toruslabs/torus-embed\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@web3auth/base-evm-adapter\"","webpack://@web3auth/torus-evm-adapter/./src/torusWalletAdapter.ts","webpack://@web3auth/torus-evm-adapter/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classCallCheck\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/createClass\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/assertThisInitialized\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/get\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/inherits\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/getPrototypeOf\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/regenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/torus-embed\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base-evm-adapter\");","import Torus, { LoginParams, NetworkInterface, TorusCtorArgs, TorusParams } from \"@toruslabs/torus-embed\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseEvmAdapter } from \"@web3auth/base-evm-adapter\";\n\nexport interface TorusWalletOptions {\n  adapterSettings?: TorusCtorArgs;\n  loginSettings?: LoginParams;\n  initParams?: Omit<TorusParams, \"network\">;\n  chainConfig?: CustomChainConfig;\n  sessionTime?: number;\n  clientId?: string;\n}\n\nexport class TorusWalletAdapter extends BaseEvmAdapter<never> {\n  readonly name: string = WALLET_ADAPTERS.TORUS_EVM;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.EIP155;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public torusInstance: Torus | null = null;\n\n  private torusWalletOptions?: TorusCtorArgs;\n\n  private initParams?: TorusParams;\n\n  private loginSettings?: LoginParams = {};\n\n  private rehydrated = false;\n\n  constructor(params: TorusWalletOptions) {\n    super(params);\n    this.torusWalletOptions = params.adapterSettings || {};\n    this.initParams = params.initParams || {};\n    this.loginSettings = params.loginSettings || {};\n    this.chainConfig = params.chainConfig || null;\n    this.sessionTime = params.sessionTime || 86400;\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.torusInstance) {\n      return this.torusInstance.provider as unknown as SafeEventEmitterProvider;\n    }\n    return null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    super.checkInitializationRequirements();\n    // set chainConfig for mainnet by default if not set\n    let network: NetworkInterface;\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n      const { blockExplorer, displayName, chainId, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n      network = { chainId: Number.parseInt(chainId, 16), host: \"mainnet\", blockExplorer, networkName: displayName, ticker, tickerName };\n    } else {\n      const { chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n      network = { chainId: Number.parseInt(chainId, 16), host: rpcTarget, blockExplorer, networkName: displayName, ticker, tickerName };\n    }\n    this.torusInstance = new Torus(this.torusWalletOptions);\n    log.debug(\"initializing torus evm adapter init\");\n    await this.torusInstance.init({\n      showTorusButton: false,\n      ...this.initParams,\n      network,\n    });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_EVM);\n\n    try {\n      log.debug(\"initializing torus evm adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with torus evm provider\", error);\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.TORUS_EVM });\n    try {\n      await this.torusInstance.login(this.loginSettings);\n      const { chainId } = this.torusInstance.provider;\n      if (chainId && parseInt(chainId) !== parseInt((this.chainConfig as CustomChainConfig).chainId, 16)) {\n        const { chainId: _chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n        const network: NetworkInterface = {\n          chainId: Number.parseInt(_chainId, 16),\n          host: rpcTarget,\n          blockExplorer,\n          networkName: displayName,\n          tickerName,\n          ticker,\n        };\n        // in some cases when user manually switches chain and relogin then adapter will not connect to initially passed\n        // chainConfig but will connect to the one that user switched to.\n        // So here trying to switch network to the one that was initially passed in chainConfig.\n        await this.torusInstance.setProvider({\n          ...network,\n        });\n        const updatedChainID = await this.torusInstance.ethereum.request<string>({ method: \"eth_chainId\" });\n        if (updatedChainID && parseInt(updatedChainID) !== parseInt((this.chainConfig as CustomChainConfig).chainId, 16)) {\n          throw WalletInitializationError.fromCode(\n            5000,\n            `Not connected to correct chainId. Expected: ${(this.chainConfig as CustomChainConfig).chainId}, Current: ${updatedChainID}`\n          );\n        }\n      }\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.torusInstance.showTorusButton();\n      this.emit(ADAPTER_STATUS.CONNECTED, { adapter: WALLET_ADAPTERS.TORUS_EVM, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_STATUS.ERRORED, error);\n      throw error instanceof Web3AuthError ? error : WalletLoginError.connectionError(\"Failed to login with torus wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    await super.disconnect();\n    await this.torusInstance.logout();\n    this.torusInstance.hideTorusButton();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.torusInstance = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n\n    this.rehydrated = false;\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    const userInfo = await this.torusInstance.getUserInfo(\"\");\n    return userInfo;\n  }\n\n  setAdapterSettings(options: { sessionTime?: number; clientId?: string }): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options?.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n    if (options?.clientId) {\n      this.clientId = options.clientId;\n    }\n  }\n}\n","export * from \"./torusWalletAdapter\";\n"],"names":["Torus","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_NAMESPACES","ADAPTER_STATUS","CHAIN_NAMESPACES","getChainConfig","log","WALLET_ADAPTERS","WalletInitializationError","WalletLoginError","Web3AuthError","BaseEvmAdapter","TorusWalletAdapter","params","TORUS_EVM","EIP155","EXTERNAL","NOT_READY","torusWalletOptions","adapterSettings","initParams","loginSettings","chainConfig","sessionTime","status","CONNECTED","torusInstance","provider","_","Error","options","blockExplorer","displayName","chainId","ticker","tickerName","network","Number","parseInt","host","networkName","rpcTarget","debug","init","showTorusButton","READY","emit","autoConnect","rehydrated","connect","error","ERRORED","notReady","CONNECTING","adapter","login","_chainId","setProvider","ethereum","request","method","updatedChainID","fromCode","reconnected","connectionError","cleanup","logout","hideTorusButton","DISCONNECTED","notConnectedError","getUserInfo","userInfo","clientId"],"sourceRoot":""}